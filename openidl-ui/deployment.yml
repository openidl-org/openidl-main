#
# SPDX-License-Identifier: Apache-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openidl-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openidl-ui
  template:
    metadata:
      labels:
        app: openidl-ui
    spec:
      volumes:
      - name: apkey
        secret:
          secretName: appssecret
      containers:
      - name: openidl-ui
        image: openidl/ui
        # for local development against minikube registry
        imagePullPolicy: Never        
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: apkey
          mountPath: /app/server/config/local-appid-config.json
          subPath: appid
---
apiVersion: v1
kind: Service
metadata:
  name: openidl-ui-service
  labels:
    app: openidl-ui
spec:
  #type: NodePort
  ports:
   - protocol: TCP
     port: 8080
     targetPort: 8080
    # the port that this service should serve on
    #- port: 8080
    #  targetPort: 8080
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: openidl-ui
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: openidl-ui-ingress
#   annotations:
#     kubernetes.io/ingress.class: "public-iks-k8s-nginx"
#     ingress.bluemix.net/sticky-cookie-services: "serviceName=openidl-ui name=route expires=1h path=/ hash=sha1"
# spec:
#   tls:
#   - hosts:
#     - openidl-ui.aais.us-east.containers.appdomain.cloud
#     secretName: aais
#   rules:
#   - host: openidl-ui.aais.us-east.containers.appdomain.cloud
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: openidl-ui-servicee
#           servicePort: 8080