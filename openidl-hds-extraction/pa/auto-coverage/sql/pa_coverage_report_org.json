{"map":"\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_car_years;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_earned_premium;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_auto_outstanding;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_incurred_loss;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_incurred_count;\nDROP TABLE IF EXISTS openidl_ep_@org.tmp_pa_coverage_ref;\nDROP TABLE IF EXISTS openidl_ep_@org.tmp_pa_coverage;\n    \n     \n    create table openidl_ep_@org.tmp_pa_coverage as\n    SELECT \n        case when a.fk_transaction_code_id in (1,6) then 'Premium'\n            when a.fk_transaction_code_id in (2,3,4,5) then  'Claim'\n            else null end as record_type,\n           concat('01-',a.accounting_month,'-',a.accounting_year)::date accounting_date,\n           a.fk_transaction_code_id,\n           a.fk_state_code_id,\n           a.policy_identifier,\n           a.occurrence_identifier,\n           a.months_covered,\n           a.fk_deductible_code_id,\n           a.fk_coverage_code_id,\n           a.exposure,\n           a.loss_amount,\n           case when a.fk_transaction_code_id in (1,6) then round((a.premium_amount / a.months_covered)) end as monthly_premium_amount,\n           (concat('01-',a.accounting_month,'-',a.accounting_year)::date + interval '1 month' * a.months_covered)::date accounting_term_expiration,\n           CASE when a.fk_transaction_code_id in (2,3,4,5) THEN concat('01-',a.accident_month,'-',a.accident_year)::date else null end as accident_date,\n           CASE\n             WHEN a.fk_coverage_code_id IN ( 1, 13, 26 ) THEN b.code\n             WHEN a.fk_coverage_code_id IN ( 2, 14, 27 ) THEN b.code\n             WHEN a.fk_coverage_code_id IN ( 3, 15, 28 ) THEN b.code\n             WHEN a.fk_coverage_code_id = 4 THEN b.code\n             WHEN a.fk_coverage_code_id IN ( 5, 16, 29 ) THEN b.code\n             WHEN a.fk_coverage_code_id IN ( 6, 17, 10, 21, 33, 11, 22, 34 ) THEN b.code\n             WHEN a.fk_coverage_code_id IN ( 7, 18, 30 ) AND a.fk_deductible_code_id = 1 THEN '7'\n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 1 THEN '8'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 1 THEN '8'\n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id = 3 THEN '9'\n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 3 THEN '10'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 3 THEN '10'       \n             WHEN a.fk_coverage_code_id IN (7,18,30) AND a.fk_deductible_code_id = 5 THEN '11'   \n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 5 THEN '12'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 5 THEN '12'     \n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id = 6 THEN '13'       \n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 6 THEN '14'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 6 THEN '14'      \n             WHEN a.fk_coverage_code_id IN (7,18,30) AND a.fk_deductible_code_id = 7 THEN '15'       \n             WHEN a.fk_coverage_code_id IN (8,19,31) AND a.fk_deductible_code_id = 7 THEN '16'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 7 THEN '16'       \n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN '17'\n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN '18'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN '18'\n             WHEN a.fk_coverage_code_id IN (9,20,32) AND a.fk_deductible_code_id = 7 THEN '16'\n             ELSE NULL\n           END AS reporting_code,\n           CASE\n             WHEN a.fk_coverage_code_id IN ( 1, 13, 26 ) THEN 'Bodily Injury'\n             WHEN a.fk_coverage_code_id IN ( 2, 14, 27 ) THEN 'Property Damage'\n             WHEN a.fk_coverage_code_id IN ( 3, 15, 28 ) THEN 'Single BI/PD Limit'\n             WHEN a.fk_coverage_code_id = 4 THEN 'PIP'\n             WHEN a.fk_coverage_code_id IN ( 5, 16, 29 ) THEN 'Medical Payments'\n             WHEN a.fk_coverage_code_id IN ( 6, 17, 10, 21,  33, 11, 22, 34 ) THEN 'Uninsured/Underinsured'\n             WHEN a.fk_coverage_code_id IN ( 7, 18, 30 ) AND a.fk_deductible_code_id = 1 THEN 'Phy Dam - Coll - Full'         \n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 1 THEN 'Phy Dam - Comp - Full'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 1 THEN 'Phy Dam - Comp - Full'  \n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id = 3 THEN 'Phy Dam - Coll - $100'\n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 3 THEN 'Phy Dam - Comp - $100'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 3 THEN 'Phy Dam - Comp - $100'\n             WHEN a.fk_coverage_code_id IN (7,18,30) AND a.fk_deductible_code_id = 5 THEN 'Phy Dam - Coll - $250'\n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 5 THEN 'Phy Dam - Comp - $250'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 5 THEN 'Phy Dam - Comp - $250'\n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id = 6 THEN 'Phy Dam - Coll - $500'         \n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id = 6 THEN 'Phy Dam - Comp - $500'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 6 THEN 'Phy Dam - Comp - $500'        \n             WHEN a.fk_coverage_code_id IN (7,18,30) AND a.fk_deductible_code_id = 7 THEN 'Phy Dam - Coll - $1000'      \n             WHEN a.fk_coverage_code_id IN (8,19,31) AND a.fk_deductible_code_id = 7 THEN 'Phy Dam - Comp - $1000'\n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id = 7 THEN 'Phy Dam - Comp - $1000'\n             WHEN a.fk_coverage_code_id IN ( 7,18,30) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN 'Phy Dam - Coll - ALL OTHER'        \n             WHEN a.fk_coverage_code_id IN ( 8,19,31) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN 'Phy Dam - Comp - ALL OTHER'       \n             WHEN a.fk_coverage_code_id IN ( 12,35) AND a.fk_deductible_code_id not in (1,3,5,6,7) THEN 'Phy Dam - Comp - ALL OTHER'\n             WHEN a.fk_coverage_code_id IN (9,20,32) AND a.fk_deductible_code_id = 7 THEN 'Bodily Injury'\n             else NULL\n           END AS reporting_name\n    FROM   openidl_base_@org.pa_stat_vw a,\n          openidl_base_@org.pa_coverage_code b\n    WHERE  a.fk_coverage_code_id = b.id;\n    \n     \ncreate table openidl_ep_@org.tmp_pa_coverage_ref as\nselect reporting_code, reporting_name \nfrom openidl_ep_@org.tmp_pa_coverage \nwhere reporting_code is not null\ngroup by reporting_code, reporting_name \norder by reporting_code::numeric;\n\n     \nCREATE OR replace FUNCTION  openidl_ep_@org.tmp_pa_car_years(IN start_date date,IN end_date date, IN pv_reporting_code VARCHAR)\nreturns      numeric AS $$DECLARE cy numeric;\nBEGIN\n    select sum(a.cy)\n    from (\n        (SELECT 1 ggroup,            \n            Datediff(accounting_date,accounting_term_expiration )/12*exposure cy\n            FROM     openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date >= start_date\n            AND accounting_term_expiration < end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code) \n        union all\n            (SELECT 2 ggroup,                                                                \n            Datediff(start_date, accounting_term_expiration)/12*exposure cy\n            FROM     openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date < start_date\n            and accounting_term_expiration> start_date\n            and accounting_term_expiration< end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code)\n        union all\n            (select 3 ggroup,\n            Datediff(accounting_date, end_date)/12*exposure cy\n            FROM     openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date > start_date\n            and accounting_date < end_date\n            AND accounting_term_expiration > end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code)\n        union all\n            (select 4 ggroup,       \n            Datediff(start_date,end_date)/12*exposure cy\n            FROM     openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date < start_date\n            AND accounting_term_expiration > end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code)\n            ) a into cy;\n    RETURN cy;\nEND$$ language plpgsql;\n     \nCREATE OR replace FUNCTION  openidl_ep_@org.tmp_pa_earned_premium(IN start_date date,IN end_date date, IN pv_reporting_code VARCHAR)\nreturns      numeric AS $$DECLARE ep numeric;\nBEGIN\n    select sum(a.ep)\n    from (\n        (SELECT 1 ggroup,\n            Datediff(accounting_date,accounting_term_expiration) * monthly_premium_amount ep\n            FROM    openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date >= start_date\n            AND accounting_term_expiration < end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code) \n        union all \n            (SELECT 2 ggroup,                                                      \n            Datediff(accounting_date, end_date) * monthly_premium_amount  ep   \n            FROM    openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date < start_date\n            and accounting_term_expiration> start_date\n            and accounting_term_expiration< end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code\n            )\n        union all \n            (select 3 ggroup,\n            Datediff(accounting_date, end_date) * monthly_premium_amount ep\n            FROM    openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date > start_date\n            and accounting_date < end_date\n            AND accounting_term_expiration > end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code)\n        union all\n            (select 4 ggroup,       \n            Datediff(start_date, end_date) *monthly_premium_amount ep\n            FROM    openidl_ep_@org.tmp_pa_coverage\n            WHERE  accounting_date < start_date\n            AND accounting_term_expiration > end_date\n            and fk_transaction_code_id in (1,8)\n            and reporting_code = pv_reporting_code)) a into ep;\n    RETURN ep;\nEND$$ language plpgsql;\n\n     \n\nCREATE OR replace FUNCTION openidl_ep_@org.tmp_pa_auto_outstanding(IN start_date date,IN end_date date, IN pv_coverage_code VARCHAR)\n    returns      numeric AS $$DECLARE ep numeric;\n    BEGIN\n        SELECT Sum(x.loss_amount) outstanding_loss\n            FROM  (SELECT t2.  reporting_code,\n                        t2.occurrence_identifier,\n                        Max(t2.loss_amount) loss_amount\n                FROM   (SELECT   reporting_code,\n                                occurrence_identifier,\n                                Max(accounting_date) accounting_date\n                        FROM   openidl_ep_@org.tmp_pa_coverage\n                        WHERE  fk_transaction_code_id = 3\n                        and   reporting_code = pv_coverage_code\n                        and accident_date > start_date\n                        and accident_date < end_date\n                        GROUP  BY   reporting_code,\n                                    occurrence_identifier) t,\n                        openidl_ep_@org.tmp_pa_coverage t2\n                WHERE  t.  reporting_code = t2.  reporting_code\n                        AND t.occurrence_identifier = t2.occurrence_identifier\n                        AND t.accounting_date = t2.accounting_date\n                GROUP  BY t2.  reporting_code,\n                            t2.occurrence_identifier,\n                            t2.accounting_date) x into ep; \n        RETURN ep;\n    END$$ language plpgsql;\n    \n     \n\nCREATE OR replace FUNCTION openidl_ep_@org.tmp_pa_incurred_loss(IN start_date date,IN end_date date, IN  pv_reporting_code VARCHAR)\n    returns      numeric AS $$DECLARE ep numeric;\n    BEGIN\n        \n        select sum(loss_amount) loss_amount\n            from \n            ((select sum(loss_amount) loss_amount from openidl_ep_@org.tmp_pa_coverage\n            where fk_transaction_code_id = 2\n            and reporting_code =  pv_reporting_code\n            and accident_date > start_date\n            and accident_date < end_date\n            union\n            (select openidl_ep_@org.tmp_pa_auto_outstanding(start_date, end_date,pv_reporting_code) loss_amount))) a into ep; \n        RETURN ep;\n    END$$ language plpgsql;\n    \n     \nCREATE OR replace FUNCTION openidl_ep_@org.tmp_pa_incurred_count(IN start_date date,IN end_date date, IN pv_reporting_code VARCHAR)\nreturns      numeric AS $$DECLARE ep numeric;\nBEGIN\n    select count(distinct(occurrence_identifier)) incurred_count \n    from openidl_ep_@org.tmp_pa_coverage\n    where fk_transaction_code_id in (2,3,4,5)\n    and reporting_code = pv_reporting_code\n    and accident_date > start_date\n    and accident_date < end_date into ep;\n    RETURN ep;\nEND$$ language plpgsql;\n    \n    ","reduce":"\nSELECT a.reporting_code,\n    a.reporting_name,\n    Round(tmp_au_earned_premium('2020-01-01' :: DATE,'2021-01-01' :: DATE, a.reporting_code)) earned_premium,\n    Round(tmp_car_years('2020-01-01' :: DATE, '2021-01-01' :: DATE, a.reporting_code)) car_years,\n    Round(tmp_pa_incurred_loss('2020-01-01'::DATE, '2021-01-01'::DATE,a.reporting_code)) incurred_loss,\n    round(tmp_pa_incurred_count('2020-01-01'::DATE, '2021-01-01'::DATE,a.reporting_code)) incurred_count\nFROM   openidl_ep_@org.tmp_pa_coverage_ref a; \n\n    ","clean":"\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_car_years;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_earned_premium;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_auto_outstanding;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_incurred_loss;\nDROP FUNCTION IF EXISTS openidl_ep_@org.tmp_pa_incurred_count;\nDROP TABLE IF EXISTS openidl_ep_@org.tmp_pa_coverage_ref;\nDROP TABLE IF EXISTS openidl_ep_@org.tmp_pa_coverage;\n    \n    "}