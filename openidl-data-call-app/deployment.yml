# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-call-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-call-app
  template:
    metadata:
      labels:
        app: data-call-app
    spec:
      volumes:
      - name: apkey
        secret:
          secretName: appssecret
      containers:
      - name: data-call-app
        # for regular deployment
        # image: aais:1
        # for local development against minikube registry
        image: openidl/data-call-app:latest
        imagePullPolicy: Never        
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: apkey
          mountPath: /server/config/local-appid-config.json
          subPath: appid
        - name: apkey
          mountPath: /server/config/local-certmanager-config.json
          subPath: certmanager
        - name: apkey
          mountPath: /server/config/local-mongo-config.json
          subPath: mongodb
        - name: apkey
          mountPath: /server/config/local-cloudant-config.json
          subPath: cloudantdb
        - name: apkey
          mountPath: /server/config/connection-profile.json
          subPath: connectionprofile
---
apiVersion: v1
kind: Service
metadata:
  name: data-call-app-service
  labels:
    app: data-call-app-service
spec:
  #type: NodePort
  ports:
   - protocol: TCP
     port: 8080
     targetPort: 8080
    # the port that this service should serve on
    #- port: 8080
    #  targetPort: 8080
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: data-call-app
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: aais-ingress
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  tls:
  - hosts:
    - aais.dev-aais-apps-cluster.us-east.containers.appdomain.cloud
    secretName: dev-aais-apps-cluster
  rules:
  - host: aais.dev-aais-apps-cluster.us-east.containers.appdomain.cloud
    http:
      paths:
      - path: /
        backend:
          serviceName: data-call-app-service
          servicePort: 8080