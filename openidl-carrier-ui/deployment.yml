# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${HOST_NAME}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ${HOST_NAME}
  template:
    metadata:
      labels:
        app: ${HOST_NAME}
    spec:
      volumes:
      - name: apkey
        secret:
          secretName: appssecret
      containers:
      - name: ${HOST_NAME}
        image: ${HOST_NAME}:1
        # for local development against minikube registry
        #imagePullPolicy: Never        
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: apkey
          mountPath: /app/server/config/local-appid-config.json
          subPath: appid
---
apiVersion: v1
kind: Service
metadata:
  name: ${HOST_NAME}
  labels:
    app: ${HOST_NAME}
spec:
  #type: NodePort
  ports:
   - protocol: TCP
     port: 8080
     targetPort: 8080
    # the port that this service should serve on
    #- port: 8080
    #  targetPort: 8080
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: ${HOST_NAME}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ${HOST_NAME}-ingress
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "cookie_name1"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
spec:
  tls:
  - hosts:
    - ${HOST_NAME}.${CLUSTER_NAME}.us-east.containers.appdomain.cloud
    secretName: ${CLUSTER_NAME}
  rules:
  - host: ${HOST_NAME}.${CLUSTER_NAME}.us-east.containers.appdomain.cloud
    http:
      paths:
      - path: /
        backend:
          serviceName: ${HOST_NAME}
          servicePort: 8080  